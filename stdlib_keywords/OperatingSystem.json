{
    "url": "http://robotframework.googlecode.com/hg/doc/libraries/OperatingSystem.html?r=2.7.5",
    "keywords": [
        {
            "args": "path, content, encoding=UTF-8",
            "name": "Append To File",
            "shortdoc": "Appends the given contend to the specified file."
        },
        {
            "args": "source, destination",
            "name": "Copy Directory",
            "shortdoc": "Copies the source directory into the destination."
        },
        {
            "args": "source, destination",
            "name": "Copy File",
            "shortdoc": "Copies the source file into a new destination."
        },
        {
            "args": "path, pattern=None",
            "name": "Count Directories In Directory",
            "shortdoc": "A wrapper for `Count Items In Directory` returning only directory count."
        },
        {
            "args": "path, pattern=None",
            "name": "Count Files In Directory",
            "shortdoc": "A wrapper for `Count Items In Directory` returning only file count."
        },
        {
            "args": "path, pattern=None",
            "name": "Count Items In Directory",
            "shortdoc": "Returns and logs the number of all items in the given directory."
        },
        {
            "args": "path",
            "name": "Create Directory",
            "shortdoc": "Creates the specified directory."
        },
        {
            "args": "path, content=, encoding=UTF-8",
            "name": "Create File",
            "shortdoc": "Creates a file with the given content and encoding."
        },
        {
            "args": "path, msg=None",
            "name": "Directory Should Be Empty",
            "shortdoc": "Fails unless the specified directory is empty."
        },
        {
            "args": "path, msg=None",
            "name": "Directory Should Exist",
            "shortdoc": "Fails unless the given path points to an existing directory."
        },
        {
            "args": "path, msg=None",
            "name": "Directory Should Not Be Empty",
            "shortdoc": "Fails if the specified directory is empty."
        },
        {
            "args": "path, msg=None",
            "name": "Directory Should Not Exist",
            "shortdoc": "Fails if the given path points to an existing file."
        },
        {
            "args": "path",
            "name": "Empty Directory",
            "shortdoc": "Deletes all the content (incl. subdirectories) from the given directory."
        },
        {
            "args": "name, msg=None",
            "name": "Environment Variable Should Be Set",
            "shortdoc": "Fails if the specified environment variable is not set."
        },
        {
            "args": "name, msg=None",
            "name": "Environment Variable Should Not Be Set",
            "shortdoc": "Fails if the specified environment variable is set."
        },
        {
            "args": "path, msg=None",
            "name": "File Should Be Empty",
            "shortdoc": "Fails unless the specified file is empty."
        },
        {
            "args": "path, msg=None",
            "name": "File Should Exist",
            "shortdoc": "Fails unless the given `path` points to an existing file."
        },
        {
            "args": "path, msg=None",
            "name": "File Should Not Be Empty",
            "shortdoc": "Fails if the specified directory is empty."
        },
        {
            "args": "path, msg=None",
            "name": "File Should Not Exist",
            "shortdoc": "Fails if the given path points to an existing file."
        },
        {
            "args": "path",
            "name": "Get Binary File",
            "shortdoc": "Returns the contents of a specified file."
        },
        {
            "args": "name, default=None",
            "name": "Get Environment Variable",
            "shortdoc": "Returns the value of an environment variable with the given name."
        },
        {
            "args": "",
            "name": "Get Environment Variables",
            "shortdoc": "Returns currently available environment variables as a dictionary."
        },
        {
            "args": "path, encoding=UTF-8",
            "name": "Get File",
            "shortdoc": "Returns the contents of a specified file."
        },
        {
            "args": "path",
            "name": "Get File Size",
            "shortdoc": "Returns and logs file size as an integer in bytes"
        },
        {
            "args": "path, format=timestamp",
            "name": "Get Modified Time",
            "shortdoc": "Returns the last modification time of a file or directory."
        },
        {
            "args": "path, pattern, encoding=UTF-8",
            "name": "Grep File",
            "shortdoc": "Returns the lines of the specified file that match the `pattern`."
        },
        {
            "args": "base, *parts",
            "name": "Join Path",
            "shortdoc": "Joins the given path part(s) to the given base path."
        },
        {
            "args": "base, *paths",
            "name": "Join Paths",
            "shortdoc": "Joins given paths with base and returns resulted paths."
        },
        {
            "args": "path, pattern=None, absolute=False",
            "name": "List Directories In Directory",
            "shortdoc": "A wrapper for `List Directory` that returns only directories."
        },
        {
            "args": "path, pattern=None, absolute=False",
            "name": "List Directory",
            "shortdoc": "Returns and logs items in a directory, optionally filtered with `pattern`."
        },
        {
            "args": "path, pattern=None, absolute=False",
            "name": "List Files In Directory",
            "shortdoc": "A wrapper for `List Directory` that returns only files."
        },
        {
            "args": "level=INFO",
            "name": "Log Environment Variables",
            "shortdoc": "Logs all environment variables using the given log level."
        },
        {
            "args": "path, encoding=UTF-8",
            "name": "Log File",
            "shortdoc": "Wrapper for `Get File` that also logs the returned file."
        },
        {
            "args": "source, destination",
            "name": "Move Directory",
            "shortdoc": "Moves the source directory into a destination."
        },
        {
            "args": "source, destination",
            "name": "Move File",
            "shortdoc": "Moves the source file into a new destination."
        },
        {
            "args": "path",
            "name": "Normalize Path",
            "shortdoc": "Normalizes the given path."
        },
        {
            "args": "",
            "name": "Read Process Output",
            "shortdoc": "Waits for the process to finish and returns its output."
        },
        {
            "args": "path, recursive=False",
            "name": "Remove Directory",
            "shortdoc": "Removes the directory pointed to by the given `path`."
        },
        {
            "args": "*names",
            "name": "Remove Environment Variable",
            "shortdoc": "Deletes the specified environment variable."
        },
        {
            "args": "path",
            "name": "Remove File",
            "shortdoc": "Removes a file with the given path."
        },
        {
            "args": "*paths",
            "name": "Remove Files",
            "shortdoc": "Uses `Remove File` to remove multiple files one-by-one."
        },
        {
            "args": "command",
            "name": "Run",
            "shortdoc": "Runs the given command in the system and returns the output."
        },
        {
            "args": "command",
            "name": "Run And Return Rc",
            "shortdoc": "Runs the given command in the system and returns the return code."
        },
        {
            "args": "command",
            "name": "Run And Return Rc And Output",
            "shortdoc": "Runs the given command in the system and returns the RC and output."
        },
        {
            "args": "name, value",
            "name": "Set Environment Variable",
            "shortdoc": "Sets an environment variable to a specified value."
        },
        {
            "args": "path, mtime",
            "name": "Set Modified Time",
            "shortdoc": "Sets the file modification and access times."
        },
        {
            "args": "path, msg=None",
            "name": "Should Exist",
            "shortdoc": "Fails unless the given path (file or directory) exists."
        },
        {
            "args": "path, msg=None",
            "name": "Should Not Exist",
            "shortdoc": "Fails if the given path (file or directory) exists."
        },
        {
            "args": "path",
            "name": "Split Extension",
            "shortdoc": "Splits the extension from the given path."
        },
        {
            "args": "path",
            "name": "Split Path",
            "shortdoc": "Splits the given path from the last path separator ('/' or '\\')."
        },
        {
            "args": "command, stdin=None, alias=None",
            "name": "Start Process",
            "shortdoc": "Starts the given command as a background process."
        },
        {
            "args": "",
            "name": "Stop All Processes",
            "shortdoc": "Waits until all the processes terminate and removes them from the"
        },
        {
            "args": "",
            "name": "Stop Process",
            "shortdoc": "Waits until the current process terminates without reading from it."
        },
        {
            "args": "index_or_alias",
            "name": "Switch Process",
            "shortdoc": "Switches the active process to the specified process."
        },
        {
            "args": "path",
            "name": "Touch",
            "shortdoc": "Emulates the UNIX touch command."
        },
        {
            "args": "path, timeout=1 minute",
            "name": "Wait Until Created",
            "shortdoc": "Waits until the given file or directory is created."
        },
        {
            "args": "path, timeout=1 minute",
            "name": "Wait Until Removed",
            "shortdoc": "Waits until the given file or directory is removed."
        }
    ]
}
